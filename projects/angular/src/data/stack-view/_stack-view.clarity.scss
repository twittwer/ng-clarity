/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

@use 'sass:meta';
@use '../../accordion/variables.accordion' as accordion-variables;
@use '../../image/icons.clarity';
@use '../../image/images.clarity';
@use '../../utils/mixins';
@use '../../utils/variables/variables.global';
@use 'variables.stack-view' as stack-view-variables;

@mixin lastElementBottomBorder($use-custom-props: true) {
  border-bottom: none;
  $fallbackShadow: 0 variables.$clr_baselineRem_1px 0 stack-view-variables.$clr-stack-view-border-box-color;
  $shadow: 0 variables.$clr_baselineRem_1px 0 var(--clr-stack-view-border-box-color);
  // IE/OldEdge
  box-shadow: $fallbackShadow;
  @if $use-custom-props == true {
    box-shadow: $shadow;
  }
}

@include meta.load-css('properties.stack-view');

@include mixins.exports('stack-view.clarity') {
  .stack-header {
    font-weight: stack-view-variables.$clr-stack-view-font-weight;
    display: flex;
    align-items: flex-end;

    .stack-title {
      display: block;
      flex: 1 1 auto;
      padding: variables.$clr_baselineRem_0_25 0;
    }

    .stack-actions {
      display: block;
      flex: 0 0 auto;

      .stack-action {
        margin: 0 0 variables.$clr_baselineRem_0_25 variables.$clr_baselineRem_0_5;

        &.btn {
          min-width: 0;
          padding: 0 variables.$clr_baselineRem_0_5;
        }

        &.btn-link {
          // Weird negative margin to make the button aligned with the stack view
          // in its default state. It then looks unaligned on hover only.
          margin-right: -1 * variables.$clr_baselineRem_0_5;
        }
      }
    }
  }

  .stack-view {
    @include mixins.css-var(
      color,
      clr-stack-view-color,
      stack-view-variables.$clr-stack-view-color,
      variables.$clr-use-custom-properties
    );
    font-size: stack-view-variables.$clr-stack-view-font-size;
    font-weight: stack-view-variables.$clr-stack-view-font-weight;
    line-height: stack-view-variables.$clr-stack-view-line-height;
    letter-spacing: stack-view-variables.$clr-stack-view-letter-spacing;
    margin-top: 0;
    border-width: stack-view-variables.$clr-stack-view-border-width;
    border-style: solid;

    @include mixins.css-var(
      border-color,
      clr-stack-view-border-color,
      stack-view-variables.$clr-stack-view-border-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-radius,
      clr-stack-view-border-radius,
      stack-view-variables.$clr-stack-view-border-radius,
      variables.$clr-use-custom-properties
    );
    overflow-y: auto;
    @include mixins.css-var(
      background-color,
      clr-stack-view-bg-color,
      stack-view-variables.$clr-stack-view-bg-color,
      variables.$clr-use-custom-properties
    );
    word-wrap: break-word;

    dd,
    dt {
      // One of the caveats of using definition lists here. Browsers automatically style them in unpredictable ways... :(
      -webkit-margin-start: 0;
      margin-inline-start: 0;
      margin-left: 0;
    }

    .stack-block {
      display: flex;
      // Wrapping for nested stack-blocks
      flex-flow: row wrap;
      @include mixins.css-var(
        border-bottom-width,
        clr-global-borderwidth,
        variables.$clr-global-borderwidth,
        variables.$clr-use-custom-properties
      );
      border-bottom-style: solid;
      @include mixins.css-var(
        border-bottom-color,
        clr-stack-view-stack-block-border-bottom,
        stack-view-variables.$clr-stack-view-stack-block-border-bottom,
        variables.$clr-use-custom-properties
      );
      overflow-y: hidden;
    }

    // We have to handle potential nested elements, typically for web components
    > .stack-block:last-child,
    > :last-child .stack-block:last-of-type {
      // This way we keep a border-bottom on the last element if the stack view is higher
      // than the total height of the  blocks it contains, but we do not have a
      // weird 1px scroll when both heights match exactly.
      @include lastElementBottomBorder(variables.$clr-use-custom-properties);
    }

    .stack-block-changed {
      > .stack-block-label {
        margin-left: -1 * variables.$clr_baselineRem_0_375;
      }
      &::before {
        content: ' ';
        position: relative;
        @include mixins.equilateral(0);
        border-top: variables.$clr_baselineRem_0_375 solid;
        @include mixins.css-var(
          border-top-color,
          clr-stack-block-changed-border-top-color,
          stack-view-variables.$clr-stack-block-changed-border-top-color,
          variables.$clr-use-custom-properties
        );
        border-right: variables.$clr_baselineRem_0_375 solid transparent;
      }
    }

    .stack-block-label {
      padding: variables.$clr_baselineRem_0_25 variables.$clr_baselineRem_0_5;
      @include mixins.css-var(
        background-color,
        clr-stack-view-stack-block-label-and-content-bg-color,
        stack-view-variables.$clr-stack-view-stack-block-label-and-content-bg-color,
        variables.$clr-use-custom-properties
      );
    }

    .stack-block-content {
      background-color: inherit;
    }

    .stack-block-caret {
      align-self: center;
    }

    .stack-block-label {
      @include mixins.css-var(
        color,
        clr-stack-view-stack-block-label-text-color,
        stack-view-variables.$clr-stack-view-stack-block-label-text-color,
        variables.$clr-use-custom-properties
      );
      font-size: stack-view-variables.$clr-stack-view-stack-block-label-font-size;
      font-weight: stack-view-variables.$clr-stack-view-stack-block-label-font-weight;
      line-height: stack-view-variables.$clr-stack-view-stack-block-label-line-height;
      letter-spacing: stack-view-variables.$clr-stack-view-stack-block-label-letter-spacing;

      // We're doing a non-flexible item.
      // It's just easier to align and stretch everything vertically this way than with
      // floats or inline-blocks.
      flex: 1 1 auto;
      display: flex;

      &::before {
        display: inline-block;
        content: '';
        float: left;
        @include mixins.equilateral(variables.$clr_baselineRem_0_583);
        margin: (variables.$clr_baselineRem_0_25 + variables.$clr_baselineRem_1px) variables.$clr_baselineRem_0_2 0 0;
        text-align: center;
      }

      &:focus {
        outline: variables.$clr_baselineRem_1px auto -webkit-focus-ring-color;
        outline-offset: -(variables.$clr_baselineRem_1px);
      }
    }

    .stack-view-key {
      flex: 0 0 40%;
      max-width: 40%;
    }

    .stack-block-caret {
      @include mixins.equilateral(variables.$clr_baselineRem_0_583);
      margin-right: variables.$clr_baselineRem_0_2;
      @include mixins.css-var(
        fill,
        clr-stack-view-stack-block-caret-color,
        stack-view-variables.$clr-stack-view-stack-block-caret-color,
        variables.$clr-use-custom-properties
      );
    }

    .stack-block-content {
      @include mixins.css-var(
        color,
        clr-stack-view-stack-block-content-text-color,
        stack-view-variables.$clr-stack-view-stack-block-content-text-color,
        variables.$clr-use-custom-properties
      );
      flex: 1 1 auto;
      width: 60%;
      margin-bottom: 0;
      font-weight: stack-view-variables.$clr-stack-view-font-weight;

      @include mixins.clr-container;
    }

    .stack-children {
      flex: 0 0 auto;
      width: 100%;

      .stack-block {
        @include mixins.css-var(
          border-bottom-color,
          clr-stack-view-stack-children-stack-block-border-bottom-color,
          stack-view-variables.$clr-stack-view-stack-children-stack-block-border-bottom-color,
          variables.$clr-use-custom-properties
        );
      }
      > .stack-block:last-child,
      > :last-child .stack-block:last-of-type {
        // This way we keep a border-bottom on the last element if the stack view is higher
        // than the total height of the  blocks it contains, but we do not have a
        // weird 1px scroll when both heights match exactly.
        @include lastElementBottomBorder(variables.$clr-use-custom-properties);
      }

      .stack-block-label,
      .stack-block-content {
        @include mixins.css-var(
          background-color,
          clr-stack-view-stack-children-stack-block-label-and-content-bg-color,
          stack-view-variables.$clr-stack-view-stack-children-stack-block-label-and-content-bg-color,
          variables.$clr-use-custom-properties
        );
      }

      .stack-block-label {
        padding-left: variables.$clr_baselineRem_1;
      }
    }

    .stack-block-expandable {
      > .stack-block-label {
        cursor: pointer;

        &::before {
          background-image: icons.generateCaretIcon(accordion-variables.$clr-accordion-text-color);
          @include images.icon-background-styles();
          transform: rotate(-90deg);
          @include mixins.equilateral(variables.$clr_baselineRem_0_5);
        }
      }
      > .stack-block-label,
      > .stack-block-content {
        transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
      }

      &:hover:not(.stack-block-expanded) {
        > .stack-block-label {
          @include mixins.css-var(
            background-color,
            clr-stack-view-stack-block-expandable-hover,
            stack-view-variables.$clr-stack-view-stack-block-expandable-hover,
            variables.$clr-use-custom-properties
          );
        }
      }
    }

    .stack-block-expanded {
      > .stack-block-label::before {
        transform: rotate(0deg);
      }

      > .stack-block-label {
        @include mixins.css-var(
          background-color,
          clr-stack-view-stack-block-expanded-bg-color,
          stack-view-variables.$clr-stack-view-stack-block-expanded-bg-color,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          color,
          clr-stack-view-stack-block-expanded-text-color,
          stack-view-variables.$clr-stack-view-stack-block-expanded-text-color,
          variables.$clr-use-custom-properties
        );
      }
    }

    /*
      Styles specific to stack views used in a modal
    */
    .modal & {
      margin-bottom: 0;
    }
  }

  //Disable the generated icon without a breaking change for the stackview static markup
  //Only targets the Angular component as of now. Static will require a breaking change.
  .stack-view {
    clr-stack-block.stack-block-expandable {
      .stack-block-label::before {
        content: none;
      }
    }

    .stack-children clr-stack-block,
    .stack-children {
      .stack-block-label {
        padding-left: variables.$clr_baselineRem_1_5;

        &::before {
          display: none;
        }
      }
      .stack-block-content {
        padding-left: variables.$clr_baselineRem_0_3;
      }
    }
  }
}
