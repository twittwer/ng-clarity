/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

@use 'sass:map';
@use 'sass:meta';
@use '../../utils/mixins';
@use '../../utils/variables/variables';
@use '../../popover/dropdown/variables.dropdown' as dropdown-variables;
@use 'variables.alert' as alert-variables;
@use '../../button/buttons.clarity';
@use '@cds/core/tokens/tokens.scss';

@include meta.load-css('properties.alert');

@mixin generateAlertType($alertType: 'info') {
  background: alert-variables.getAlertColor($alertType, bg-color);
  color: alert-variables.getAlertColor($alertType, color);

  & a {
    color: alert-variables.getAlertColor($alertType, color);
  }

  $border-prop: alert-variables.getAlertColor($alertType, border-color);
  @if $border-prop != 'none' {
    border: alert-variables.$clr-alert-borderwidth solid $border-prop;
  } @else {
    border: none;
  }

  .alert-icon {
    color: alert-variables.getAlertColor($alertType, icon);
  }

  $myActionSassVar: alert-variables.getAlertColor($alertType, action);
  $myActionActiveSassVar: alert-variables.getAlertColor($alertType, action-active);

  .alert-actions .dropdown .dropdown-toggle {
    color: $myActionSassVar;
    border-color: $myActionActiveSassVar;
  }

  .alert-action,
  .dropdown-toggle {
    color: $myActionSassVar;

    &.btn {
      border-color: $myActionSassVar;
      background-color: var(--clr-btn-transparent-bg-color);

      cds-icon,
      clr-icon {
        color: $myActionSassVar;
      }

      &:focus,
      &:hover,
      &:active {
        border-color: $myActionActiveSassVar;
      }

      // ATM (after token migration)
      // &:active section to be removed alert buttons should act as outline buttons
      //&:active {
      //  // OldEdge + IE
      //  box-shadow: 0 variables.$clr_baselineRem_1px 0 0 $myActionActiveSassVar inset;
      //  @if variables.$clr-use-custom-properties == true {
      //    box-shadow: 0
      //      variables.$clr_baselineRem_1px
      //      0
      //      0
      //      var(mixins.css-variablize-string($myActionActiveCssVar), $myActionActiveSassVar)
      //      inset;
      //  }
      //}
    }

    &:focus,
    &:hover,
    &:active {
      color: $myActionActiveSassVar;
    }
  }

  .close {
    color: alert-variables.getAlertColor($alertType, close-icon);

    cds-icon,
    clr-icon {
      fill: alert-variables.getAlertColor($alertType, close-icon);
    }

    &:focus,
    &:hover,
    &:active {
      color: alert-variables.getAlertColor($alertType, close-icon-hover);
    }
  }
}

@mixin generateLightweightAlertType($alertType: 'info') {
  &.alert-#{$alertType} {
    .alert-text {
      color: alert-variables.getAlertColor('lightweight-#{$alertType}', color);
    }
    .alert-icon {
      color: alert-variables.getAlertColor('lightweight-#{$alertType}', icon);
    }
  }
}

@include mixins.exports('alert.clarity') {
  $alertTypes: info, warning, danger, success;

  .alert-icon {
    @include mixins.min-equilateral(tokens.$cds-global-space-9);
    // TODO check are margins needed
    margin-left: 0;
    margin-top: 0;
  }

  .alert-icon-wrapper {
    display: inline-flex;
    flex: 0 0 tokens.$cds-global-space-9;
  }

  .alert-item {
    flex: 1 1 auto;
    display: flex;
    flex-wrap: nowrap;
    gap: tokens.$cds-global-space-5;

    min-height: alert-variables.$clr-alert-item-min-height;
    margin-bottom: 0;

    &:last-child {
      margin-bottom: 0;
    }
  }

  .alert-items {
    flex: 1 1 auto;
    flex-flow: column nowrap;
    padding: tokens.$cds-global-space-5;
    gap: tokens.$cds-global-space-5;
    display: flex;
  }

  .alert-item > span,
  .alert-text {
    flex: 1 1;
    margin-right: 0;
    text-align: left;
    align-self: center;
  }

  .alert {
    @include mixins.generate-typography-token(
      'SECONDARY-13-RG-STD',
      (
        font-size: alert-variables.$clr-alert-font-size,
        letter-spacing: alert-variables.$clr-alert-letter-spacing,
      )
    );
    position: relative;
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    width: auto;
    border-radius: alert-variables.$clr-alert-borderradius;
    margin-top: alert-variables.$clr-alert-top-margin;

    @include generateAlertType(info);

    &.alert-info {
      @include generateAlertType(info);
    }

    &.alert-success {
      @include generateAlertType(success);
    }

    &.alert-warning {
      @include generateAlertType(warning);
    }

    &.alert-danger {
      @include generateAlertType(danger);
    }

    .alert-item {
      .clr-icon {
        @include mixins.equilateral(alert-variables.$clr-alert-icon-dimension-sm);
        margin-right: alert-variables.$clr-icon-margin-right;
      }

      .clr-icon + .alert-text {
        padding-left: 0;

        &::before {
          content: none;
        }
      }
    }

    .alert-actions {
      flex: 0 0 auto;
      white-space: nowrap;
      align-self: center;

      .dropdown:last-child {
        // used to align far-right dropdown inside an alert
        //margin-right: calc(-1 * #{tokens.$cds-global-space-2});
      }

      .dropdown-item {
        color: dropdown-variables.$clr-dropdown-text-color;
        font-size: dropdown-variables.$clr-dropdown-font-size;
        line-height: dropdown-variables.$clr-dropdown-line-height;
        letter-spacing: dropdown-variables.$clr-dropdown-letter-spacing;
      }
    }

    .alert-action:not(:last-child) {
      margin-right: tokens.$cds-global-space-6;
    }

    .alert-action,
    .dropdown-toggle {
      text-decoration: underline;
    }

    .alert-action {
      button.dropdown-toggle:not(.btn) {
        background: transparent;
        cursor: pointer;
        color: dropdown-variables.$clr-dropdown-text-color;
      }
    }
    .dropdown-toggle:not(.btn) {
      display: inline-block;
      background: transparent;
      border: none;
    }

    .close {
      order: 100;
      flex: 0 0 tokens.$cds-global-space-9;
      @include mixins.equilateral(tokens.$cds-global-space-9);
      margin: tokens.$cds-global-space-5;

      cds-icon,
      clr-icon {
        margin-top: 0;
        @include mixins.min-equilateral(tokens.$cds-global-space-9);
      }
    }

    .close ~ .alert-item > .alert-actions {
      padding-right: tokens.$cds-global-space-6;

      & > .alert-action:last-child {
        margin-right: tokens.$cds-global-space-6;
      }
    }

    &.alert-lightweight {
      background: none;
      border: none;
      .alert-items {
        padding: 0;
        .alert-item {
          min-height: 0;
          margin: 0;
        }
        .alert-text {
          @include mixins.generate-typography-token('BODY-14-RG-STD');
        }
      }
      .close {
        display: none;
      }

      &:not(.alert-sm) .alert-icon {
        margin: 0;
      }

      @include generateLightweightAlertType(info);
      @include generateLightweightAlertType(warning);
      @include generateLightweightAlertType(danger);
      @include generateLightweightAlertType(success);
    }
  }

  .alert-app-level {
    margin: 0;
    border: none;
    border-radius: 0;
    overflow-y: auto;

    @include generateAlertType(app-info);

    &.alert-info {
      @include generateAlertType(app-info);
    }

    &.alert-danger {
      @include generateAlertType(app-danger);
    }

    &.alert-warning {
      @include generateAlertType(app-warning);
    }

    &.alert-success {
      @include generateAlertType(app-success);
    }

    .alert-items {
      align-items: center;
      padding: tokens.$cds-global-space-4;
    }

    .alert-item {
      justify-content: center;
      align-items: center;
      min-height: tokens.$cds-global-space-9;

      .btn {
        @extend .btn-inverse;
        @extend .btn-sm;
        margin: 0;
      }
    }

    .alert-icon-wrapper {
      // TODO check is it needed
      margin-top: 0;
    }

    .close {
      height: tokens.$cds-global-space-11;
      overflow: hidden;

      cds-icon,
      clr-icon {
        margin-top: 0;
      }
    }

    .alert-action,
    .dropdown-toggle {
      text-decoration: none;
    }
  }

  .alert-sm {
    @include mixins.generate-typography-token('SECONDARY-13-RG-EXP');
    .alert-items {
      padding: tokens.$cds-global-space-3 tokens.$cds-global-space-6 tokens.$cds-global-space-3
        tokens.$cds-global-space-5;
    }

    .alert-icon-wrapper {
      display: flex;
      flex-basis: tokens.$cds-global-space-9;
      height: tokens.$cds-global-space-9;
    }

    .alert-icon {
      @include mixins.min-equilateral(tokens.$cds-global-space-9);
    }

    .alert-item > span,
    .alert-text {
      // TODO use typography-token
      //@include mixins.css-var(
      //  line-height,
      //  clr-alert-sm-line-height,
      //  variables.$clr_baselineRem_0_667,
      //  variables.$clr-use-custom-properties
      //);
    }

    .close {
      flex: 0 0 tokens.$cds-global-space-9;
      margin: tokens.$cds-global-space-3 tokens.$cds-global-space-5 tokens.$cds-global-space-3
        tokens.$cds-global-space-0;
      height: tokens.$cds-global-space-9;

      cds-icon,
      clr-icon {
        @include mixins.min-equilateral(tokens.$cds-global-space-9);
      }
    }

    &.alert-lightweight {
      background: none;
      border: none;
      .alert-items {
        gap: tokens.$cds-global-space-3;
        .alert-item {
          padding: #{tokens.$cds-global-space-3} 0;
          .alert-text {
            // TODO check are font-size and line-height needed
            //@include mixins.css-var(
            //  font-size,
            //  clr-alert-lightweight-sm-font-size,
            //  variables.$clr_baselineRem_0_458,
            //  variables.$clr-use-custom-properties
            //);
            //@include mixins.css-var(
            //  line-height,
            //  clr-alert-lightweight-sm-line-height,
            //  variables.$clr_baselineRem_0_667,
            //  variables.$clr-use-custom-properties
            //);
          }

          .alert-icon-wrapper {
            flex-basis: tokens.$cds-global-space-7;
            height: tokens.$cds-global-space-7;
          }

          .alert-icon {
            // TODO check are font-size needed
            //@include mixins.css-var(
            //  font-size,
            //  clr-alert-lightweight-sm-font-size,
            //  alert-variables.$clr-alert-font-size,
            //  variables.$clr-use-custom-properties
            //);
            @include mixins.min-equilateral(tokens.$cds-global-space-7);
          }
        }
      }
      .close {
        display: none;
      }
    }
  }

  @media screen and (max-width: map.get(variables.$clr-grid-breakpoints, md)) {
    .alert {
      .alert-item {
        flex-wrap: wrap;
      }

      .alert-text {
        margin-right: 0;
        //90% was just an estimate to distance the text from the
        //close alert button on medium and smaller breakpoints.
        max-width: 90%;
        //needed for safari
        width: 90%;
        flex-basis: 90%;
      }

      .alert-actions {
        flex: 1 0 100%;
        padding-top: mixins.baselinePx(3);
        // TOCHECK: CALCULATIONS
        padding-left: alert-variables.$clr-alert-icon-dimension-sm + alert-variables.$clr-icon-margin-right;
      }
    }

    .alert-app-level {
      .alert-actions {
        margin-left: tokens.$cds-global-space-12;
      }
    }
  }

  .alert-hidden {
    display: none;
  }

  //alert padding/margin adjustments
  //1.cards
  .card {
    .alert {
      margin: 0 0 tokens.$cds-global-space-5 0;
    }
  }

  //2. Modal
  .modal {
    .alert + .modal-header {
      margin-top: tokens.$cds-global-space-6;
    }
  }

  //3. Multiple app level alerts
  .alerts {
    .alerts-wrapper {
      display: flex;
      flex-direction: row;
      clr-alert {
        flex: 1 1 100%;
      }
    }

    @each $alertType in $alertTypes {
      &.alert-#{$alertType} {
        background: var(--clr-app-alert-#{$alertType}-pager-bg-color);
      }
    }
  }

  .alerts-pager {
    color: var(--clr-app-alert-pager-text-color);

    @each $alertType in $alertTypes {
      .alert-#{$alertType} & {
        color: var(--clr-app-alert-#{$alertType}-pager-font-color);
      }
    }

    // todo check typography token
    //@include mixins.css-var(
    //  font-size,
    //  clr-alert-font-size,
    //  alert-variables.$clr-alert-font-size,
    //  variables.$clr-use-custom-properties
    //);
    //letter-spacing: alert-variables.$clr-alert-letter-spacing;
    min-height: alert-variables.$clr-alert-min-height;
    flex: 1 0 var(--clr-app-alert-pager-width);
  }

  .alerts-pager-button {
    @include mixins.clr-no-styles-button();
    color: var(--clr-app-alert-pager-text-color);
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    height: var(--clr-btn-appearance-standard-height);

    cds-icon,
    clr-icon {
      color: var(--clr-app-alert-pager-text-color);

      @each $alertType in $alertTypes {
        .alert-#{$alertType} & {
          color: var(--clr-app-alert-#{$alertType}-pager-font-color);
        }
      }
    }
  }

  .alerts-pager-control {
    display: flex;
    white-space: nowrap;
    height: 100%;
    align-items: center;
    text-align: center;
    padding: 0 tokens.$cds-global-space-9;

    > * {
      display: inline-flex;
      justify-content: center;
      flex: 1 1 auto;
    }
  }
}
